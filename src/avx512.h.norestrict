#ifndef _AVX512_H_
  #define _AVX512_H_
  // Libraries
  #include "commons.h"
  #include <x86intrin.h>
  #include <immintrin.h>
  #include <zmmintrin.h>
  // Local parameters
//  #define KB 464 
//  #define MB 112
//  #define KB 388 
//  #define MB 140
  #define KB 256 
  #define MB 124 // 124 155 186 
  // (4800,4800) (5600,6000) (6000,6400)
  // (6400,6400) (6800,6880) (7200,7280) (8000,8096) (8800,8960), (9600,9632)
//  #define NB 15000 
  #define NB 14800 

  #define MR 31 
  #define NR 8
//  #define MR 28 
//  #define NR 8

//  #define MR 16
//  #define NR 8

//  #define MR 15
//  #define NR 8
//  #define MR 15 
//  #define NR 16
//  #define MR 7
//  #define NR 16
//  #define MR 7 
//  #define NR 32
//  #define MR 8
//  #define NR 24
//  #define MR 30 
//  #define NR 8

  // prefetch
  #define L1_DIST_A 310 //300 // 31 62 93 124 155 186 217 248 279 310
  #define L1_DIST_B 224 //320 // 320 // 8 16 24 32 40 48 56 64 72 80
  // unroll
  #define NU 2 
  // # of threads
  #define NT  2
  #define NT2 32 
  //
  void packarc(int           row, // # of rows
               int           col, // # of cols
               const double *mt,
               int           inc, // distance
               double       *bk);
  //
  void packbrr(int           row, // # of rows
               int           col, // # of cols
               const double *mt,
               int           inc, // distance
               double       *bk);
  //
  // Packing B, r-major -> r-major
  /*void packpbrr(int           row, // # of rows
                int           col, // # of cols
                const double *mt,
                int           inc, // distance
                double       *bk);*/
  //
  void micro_kernel0(int                    k,
                     const double *A,
                     const double *B,
                     double       *C,
                     int                    ncol);
  //
  void micro_kernel1(int                    k,
                     const double *A,
                     const double *B,
                     double       *C,
                     int                    ncol);
  //
  void micro_dxpy(int                    m,
                  int                    n,
                  double       *C,
                  const double *D,
                  int                    ncol);
  //
  void ijrloop(const int              m,
               const int              n,
               const int              ni,
               const int              k,
               const int              ki,
               const double *A,
               const int              la,
               const double *B,
               double       *C,
               const int              lc);
  //
  void user_dgemm(const int              m,
                  const int              n,
                  const int              k,
                  const double *A,
                  const int              la, // distance
                  const double *B,
                  const int              lb, // distance
                  double       *C,
                  const int              lc);
  //
  //
#endif
